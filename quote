public class InsureeController : Controller
{
    private ApplicationDbContext _context;

    public InsureeController(ApplicationDbContext context)
    {
        _context = context;
    }

    [HttpPost]
    [ValidateAntiForgeryToken]
    public async Task<IActionResult> Create(Insuree insuree)
    {
        if (ModelState.IsValid)
        {
            insuree.Quote = CalculateQuote(insuree);
            _context.Add(insuree);
            await _context.SaveChangesAsync();
            return RedirectToAction(nameof(Index));
        }
        return View(insuree);
    }

    private decimal CalculateQuote(Insuree insuree)
    {
        decimal basePrice = 50m;
        decimal total = basePrice;

        // Age adjustments
        if (insuree.Age <= 18)
        {
            total += 100m;
        }
        else if (insuree.Age >= 19 && insuree.Age <= 25)
        {
            total += 50m;
        }
        else if (insuree.Age >= 26)
        {
            total += 25m;
        }

        // Car year adjustments
        if (insuree.CarYear < 2000)
        {
            total += 25m;
        }
        else if (insuree.CarYear > 2015)
        {
            total += 25m;
        }

        // Car make and model adjustments
        if (insuree.CarMake.ToLower() == "porsche")
        {
            total += 25m;
            if (insuree.CarModel.ToLower() == "911 carrera")
            {
                total += 25m;
            }
        }

        // Speeding ticket adjustments
        total += insuree.SpeedingTickets * 10m;

        // DUI adjustment
        if (insuree.HasDUI)
        {
            total *= 1.25m; // Increase by 25%
        }

        // Full coverage adjustment
        if (insuree.CoverageType == "Full")
        {
            total *= 1.50m; // Increase by 50%
        }

        return total;
    }

    // Admin View for all issued quotes
    public async Task<IActionResult> Admin()
    {
        var insurees = await _context.Insurees
            .Select(i => new InsureeViewModel
            {
                FirstName = i.FirstName,
                LastName = i.LastName,
                EmailAddress = i.EmailAddress,
                Quote = i.Quote
            })
            .ToListAsync();

        return View(insurees);
    }
}

// View Model for Admin Page
public class InsureeViewModel
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string EmailAddress { get; set; }
    public decimal Quote { get; set; }
}
